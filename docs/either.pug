include mixins.pug

h3#either Either
:markdown-it
  Either is a container that can be either left or right.

  Either implements functor and applicative.

+fn('Either<A, B>', 'class')
  :markdown-it
    Type of either values.

+fn('Either#match', '<K>(m: EitherMatch<A, B, K>): K')
   :markdown-it

     Pattern matching on `Either` values. `EitherMatch<A, B, K>` must
     be a object with a `left` and `right` properties containing
     functions returning `K`.

     ```javascript
     response.match({
       right: (rating) => `User gave the rating ${rating}`,
       left: (message) => `User wrote the message: ${message}`
     });
     ```

+fn('left', '<A>(a: A): Either<A, any>')
  div.description
    :markdown-it
      Returns an `Either` that is left and contains `a`.

+fn('right', '<B>(b: B): Either<any, B>')
  div.description
    :markdown-it
      Returns an `Either` that is right and contains `b`.

+fn('isLeft', '(either: Either<any, any>): boolean')
  div.description
    :markdown-it
      Return `true` is `either` is left.

+fn('isRight', '(either: Either<any, any>): boolean')
  div.description
    :markdown-it
      Return `true` is `either` is right.


+fn('fromEither', '<A, B>(either: Either<A, B>): A | B')
  div.description
    :markdown-it
      Extracts the value from an `Either`.